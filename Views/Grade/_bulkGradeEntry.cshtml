@model BulkGradeEntryDTO

<form asp-action="BulkGradeEntry" asp-controller="Grade" method="post" autocomplete="off">
    <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Bulk Grade Entry</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    <div class="modal-body" style="max-height: 70vh; overflow-y: auto;">
        <input type="hidden" asp-for="AssessmentId" />
        
        <!-- Assessment Information -->
        <h6 class="mb-3">Assessment Information</h6>
        <div class="row g-3">
            <div class="col-12 mb-2">
                <label class="form-label" asp-for="AssessmentId">Assessment<span class="text-danger">*</span></label>
                <div class="searchable-select dropdown w-100"
                     data-name="AssessmentId"
                     data-selected-value="@Model.AssessmentId"
                     data-url="@Url.Action("GetAllAssessments", "Assessment")">
                    <button class="form-select w-100 text-start d-flex justify-content-between align-items-center"
                        type="button"
                        id="dropdownSearchButton"
                        data-bs-toggle="dropdown"
                        aria-expanded="false">
                    <span class="text-secondary selected-assessment">
                        Select an Assessment
                    </span>
                        <i class="bx bx-chevron-down ms-2 text-secondary"></i>
                    </button>
                    <ul class="dropdown-menu py-2 px-1"
                        aria-labelledby="dropdownSearchButton">
                        <div class="px-2">
                            <input type="text"
                                   class="form-control form-control-sm mb-2 dropdown-search-input"
                                   id="dropdownSearchInput"
                                   placeholder="Search Assessment.."
                                   autocomplete="off" />
                        </div>
                        <li><span class="dropdown-item text-muted small"><i class="bx bx-loader bx-spin"></i> Loading...</span></li>
                    </ul>
                </div>
                <span asp-validation-for="AssessmentId" class="text-danger"></span>
            </div>
        </div>

        <!-- Grade Entries -->
        <h6 class="mt-4 mb-3">Grade Entries</h6>
        <div id="gradeEntries">
            <div class="grade-entry-item border rounded p-3 mb-3">
                <div class="row g-3">
                    <div class="col-4 mb-2">
                        <label class="form-label">Student<span class="text-danger">*</span></label>
                        <div class="searchable-select dropdown w-100"
                             data-name="Grades[0].StudentId"
                             data-url="@Url.Action("GetAllStudents", "Student")">
                            <button class="form-select w-100 text-start d-flex justify-content-between align-items-center"
                                type="button"
                                data-bs-toggle="dropdown"
                                aria-expanded="false">
                            <span class="text-secondary selected-student">
                                Select Student
                            </span>
                                <i class="bx bx-chevron-down ms-2 text-secondary"></i>
                            </button>
                            <ul class="dropdown-menu py-2 px-1">
                                <div class="px-2">
                                    <input type="text"
                                           class="form-control form-control-sm mb-2 dropdown-search-input"
                                           placeholder="Search Student.."
                                           autocomplete="off" />
                                </div>
                                <li><span class="dropdown-item text-muted small"><i class="bx bx-loader bx-spin"></i> Loading...</span></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-4 mb-2">
                        <label class="form-label">Enrollment<span class="text-danger">*</span></label>
                        <div class="searchable-select dropdown w-100"
                             data-name="Grades[0].EnrollmentId"
                             data-url="@Url.Action("GetAllEnrollments", "Enrollment")">
                            <button class="form-select w-100 text-start d-flex justify-content-between align-items-center"
                                type="button"
                                data-bs-toggle="dropdown"
                                aria-expanded="false">
                            <span class="text-secondary selected-enrollment">
                                Select Enrollment
                            </span>
                                <i class="bx bx-chevron-down ms-2 text-secondary"></i>
                            </button>
                            <ul class="dropdown-menu py-2 px-1">
                                <div class="px-2">
                                    <input type="text"
                                           class="form-control form-control-sm mb-2 dropdown-search-input"
                                           placeholder="Search Enrollment.."
                                           autocomplete="off" />
                                </div>
                                <li><span class="dropdown-item text-muted small"><i class="bx bx-loader bx-spin"></i> Loading...</span></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-3 mb-2">
                        <label class="form-label">Earned Score<span class="text-danger">*</span></label>
                        <input type="number" step="0.01" min="0" class="form-control earned-score" placeholder="0.00" />
                    </div>
                    <div class="col-1 mb-2 d-flex align-items-end">
                        <button type="button" class="btn btn-outline-danger btn-sm remove-entry" style="display: none;">
                            <i class="bx bx-trash"></i>
                        </button>
                    </div>
                </div>
                <div class="row g-3">
                    <div class="col-12 mb-2">
                        <label class="form-label">Teacher Comments</label>
                        <textarea class="form-control teacher-comments" rows="2" placeholder="Comments about performance"></textarea>
                    </div>
                </div>
                <div class="row g-3">
                    <div class="col-6 mb-2">
                        <div class="form-check">
                            <input class="form-check-input late-submission" type="checkbox" />
                            <label class="form-check-label">Late Submission</label>
                        </div>
                    </div>
                    <div class="col-6 mb-2">
                        <div class="form-check">
                            <input class="form-check-input resubmission-allowed" type="checkbox" />
                            <label class="form-check-label">Resubmission Allowed</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="text-center">
            <button type="button" class="btn btn-outline-primary" id="addGradeEntry">
                <i class="bx bx-plus"></i> Add Another Grade Entry
            </button>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary">Submit Grades</button>
    </div>
</form>

<script>
$(function () {
    let entryIndex = 0;

    // Initialize searchable dropdowns
    function initializeDropdowns() {
        $('.searchable-select').each(function () {
            const $container = $(this);
            const $button = $container.find('button.form-select');
            const $dropdownMenu = $container.find('.dropdown-menu');
            const $searchInput = $container.find('.dropdown-search-input');
            const hiddenName = $container.data('name');
            let selectedValue = $container.data('selected-value') || '';
            const ajaxUrl = $container.data('url')?.trim() || null;

            let $hiddenInput = $container.find(`input[type="hidden"][name="${hiddenName}"]`);
            if (!$hiddenInput.length) {
                $hiddenInput = $('<input type="hidden">').attr('name', hiddenName);
                $container.append($hiddenInput);
            }
            $hiddenInput.val(selectedValue);

            function renderOptions(items) {
                $dropdownMenu.find('li').not(':first-child').remove();

                if (!Array.isArray(items)) {
                    return $dropdownMenu.append('<li><a href="#" class="dropdown-item text-danger small">Invalid data format</a></li>');
                }

                if (items.length === 0) {
                    return $dropdownMenu.append('<li><a href="#" class="dropdown-item text-muted small">No results found</a></li>');
                }

                items.forEach(item => {
                    const isActive = (selectedValue.toString() === item.id.toString()) ? ' active' : '';
                    const displayText = item.text || item.name || item.studentName || item.assessmentName;
                    const $li = $(`
                        <li>
                            <a href="#" class="dropdown-item${isActive}" data-value="${item.id}" title="${displayText}">
                                ${displayText}
                            </a>
                        </li>
                    `);
                    $dropdownMenu.append($li);
                    if (isActive) {
                        $button.find('.selected-student, .selected-enrollment, .selected-assessment').text(displayText).removeClass('text-secondary');
                    }
                });
            }

            function fetchOptions(query = '') {
                if (!ajaxUrl) return;

                $dropdownMenu.find('li').not(':first-child').remove();
                $dropdownMenu.append('<li><span class="dropdown-item text-muted small"><i class="bx bx-loader bx-spin"></i> Loading...</span></li>');

                $.ajax({
                    url: ajaxUrl,
                    method: 'GET',
                    data: { q: query },
                    dataType: 'json'
                })
                    .done(function (data) {
                        renderOptions(data);
                    })
                    .fail(function (xhr, status, error) {
                        $dropdownMenu.find('li').not(':first-child').remove();
                        $dropdownMenu.append('<li><a href="#" class="dropdown-item text-danger small">Error loading data</a></li>');
                    });
            }

            $searchInput.on('input', function () {
                const query = $(this).val().toLowerCase();
                if (ajaxUrl) {
                    fetchOptions(query);
                }
            });

            $container.on('show.bs.dropdown', function () {
                $searchInput.val('').focus();
                if (ajaxUrl) {
                    fetchOptions('');
                }
            });

            $dropdownMenu.on('click', '.dropdown-item', function (e) {
                e.preventDefault();
                const $item = $(this);
                const newValue = $item.data('value');
                const newText = $item.text();

                selectedValue = newValue;
                $hiddenInput.val(newValue);
                $container.data('selected-value', newValue);
                
                $button.find('.selected-student, .selected-enrollment, .selected-assessment').text(newText).removeClass('text-secondary');

                $dropdownMenu.find('.dropdown-item').removeClass('active');
                $item.addClass('active');

                const bsDropdown = bootstrap.Dropdown.getInstance($button[0]);
                if (bsDropdown) {
                    bsDropdown.hide();
                }
            });

            if (ajaxUrl) {
                fetchOptions('');
            }
        });
    }

    // Add new grade entry
    $('#addGradeEntry').on('click', function () {
        entryIndex++;
        const newEntry = $(`
            <div class="grade-entry-item border rounded p-3 mb-3">
                <div class="row g-3">
                    <div class="col-4 mb-2">
                        <label class="form-label">Student<span class="text-danger">*</span></label>
                        <div class="searchable-select dropdown w-100"
                             data-name="Grades[${entryIndex}].StudentId"
                             data-url="@Url.Action("GetAllStudents", "Student")">
                            <button class="form-select w-100 text-start d-flex justify-content-between align-items-center"
                                type="button"
                                data-bs-toggle="dropdown"
                                aria-expanded="false">
                            <span class="text-secondary selected-student">
                                Select Student
                            </span>
                                <i class="bx bx-chevron-down ms-2 text-secondary"></i>
                            </button>
                            <ul class="dropdown-menu py-2 px-1">
                                <div class="px-2">
                                    <input type="text"
                                           class="form-control form-control-sm mb-2 dropdown-search-input"
                                           placeholder="Search Student.."
                                           autocomplete="off" />
                                </div>
                                <li><span class="dropdown-item text-muted small"><i class="bx bx-loader bx-spin"></i> Loading...</span></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-4 mb-2">
                        <label class="form-label">Enrollment<span class="text-danger">*</span></label>
                        <div class="searchable-select dropdown w-100"
                             data-name="Grades[${entryIndex}].EnrollmentId"
                             data-url="@Url.Action("GetAllEnrollments", "Enrollment")">
                            <button class="form-select w-100 text-start d-flex justify-content-between align-items-center"
                                type="button"
                                data-bs-toggle="dropdown"
                                aria-expanded="false">
                            <span class="text-secondary selected-enrollment">
                                Select Enrollment
                            </span>
                                <i class="bx bx-chevron-down ms-2 text-secondary"></i>
                            </button>
                            <ul class="dropdown-menu py-2 px-1">
                                <div class="px-2">
                                    <input type="text"
                                           class="form-control form-control-sm mb-2 dropdown-search-input"
                                           placeholder="Search Enrollment.."
                                           autocomplete="off" />
                                </div>
                                <li><span class="dropdown-item text-muted small"><i class="bx bx-loader bx-spin"></i> Loading...</span></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-3 mb-2">
                        <label class="form-label">Earned Score<span class="text-danger">*</span></label>
                        <input type="number" step="0.01" min="0" class="form-control earned-score" placeholder="0.00" />
                    </div>
                    <div class="col-1 mb-2 d-flex align-items-end">
                        <button type="button" class="btn btn-outline-danger btn-sm remove-entry">
                            <i class="bx bx-trash"></i>
                        </button>
                    </div>
                </div>
                <div class="row g-3">
                    <div class="col-12 mb-2">
                        <label class="form-label">Teacher Comments</label>
                        <textarea class="form-control teacher-comments" rows="2" placeholder="Comments about performance"></textarea>
                    </div>
                </div>
                <div class="row g-3">
                    <div class="col-6 mb-2">
                        <div class="form-check">
                            <input class="form-check-input late-submission" type="checkbox" />
                            <label class="form-check-label">Late Submission</label>
                        </div>
                    </div>
                    <div class="col-6 mb-2">
                        <div class="form-check">
                            <input class="form-check-input resubmission-allowed" type="checkbox" />
                            <label class="form-check-label">Resubmission Allowed</label>
                        </div>
                    </div>
                </div>
            </div>
        `);
        
        $('#gradeEntries').append(newEntry);
        initializeDropdowns();
        updateRemoveButtons();
    });

    // Remove grade entry
    $(document).on('click', '.remove-entry', function () {
        $(this).closest('.grade-entry-item').remove();
        updateRemoveButtons();
    });

    // Update remove buttons visibility
    function updateRemoveButtons() {
        const entries = $('.grade-entry-item');
        entries.find('.remove-entry').show();
        if (entries.length === 1) {
            entries.first().find('.remove-entry').hide();
        }
    }

    // Form submission
    $('form').on('submit', function (e) {
        e.preventDefault();
        
        const grades = [];
        $('.grade-entry-item').each(function (index) {
            const $entry = $(this);
            const studentId = $entry.find('input[name*="StudentId"]').val();
            const enrollmentId = $entry.find('input[name*="EnrollmentId"]').val();
            const earnedScore = $entry.find('.earned-score').val();
            const teacherComments = $entry.find('.teacher-comments').val();
            const lateSubmission = $entry.find('.late-submission').is(':checked');
            const resubmissionAllowed = $entry.find('.resubmission-allowed').is(':checked');

            if (studentId && enrollmentId && earnedScore) {
                grades.push({
                    StudentId: studentId,
                    EnrollmentId: enrollmentId,
                    EarnedScore: parseFloat(earnedScore),
                    TeacherComments: teacherComments,
                    LateSubmission: lateSubmission,
                    ResubmissionAllowed: resubmissionAllowed
                });
            }
        });

        if (grades.length === 0) {
            alert('Please add at least one grade entry.');
            return;
        }

        const formData = {
            AssessmentId: $('#AssessmentId').val(),
            Grades: grades
        };

        // Submit via AJAX
        $.ajax({
            url: $(this).attr('action'),
            method: 'POST',
            data: JSON.stringify(formData),
            contentType: 'application/json',
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            success: function (response) {
                if (response.flag) {
                    location.reload();
                } else {
                    alert('Error: ' + response.message);
                }
            },
            error: function () {
                alert('An error occurred while submitting grades.');
            }
        });
    });

    // Initialize
    initializeDropdowns();
    updateRemoveButtons();
});
</script>
