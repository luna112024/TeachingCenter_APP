@model CreateCourseDTO

<form asp-action="AddCourse" asp-controller="Course" method="post" autocomplete="off">
    <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Create Course</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    <div class="modal-body">
        <div class="row g-3">
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="CourseCode">Course Code<span class="text-danger">*</span></label>
                <input asp-for="CourseCode" type="text" class="form-control" required placeholder="Enter Course Code.."/>
                <span asp-validation-for="CourseCode" class="text-danger"></span>
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="CourseName">Course Name<span class="text-danger">*</span></label>
                <input asp-for="CourseName" type="text" class="form-control" required placeholder="Enter Course Name.."/>
                <span asp-validation-for="CourseName" class="text-danger"></span>
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="CourseNameChinese">Course Name (Chinese)</label>
                <input asp-for="CourseNameChinese" type="text" class="form-control" placeholder="Enter Course Name in Chinese.." />
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="LevelId">Level<span class="text-danger">*</span></label>
                <div class="searchable-select dropdown w-100"
                     data-name="LevelId"
                     data-selected-value="@(Model?.LevelId ?? Guid.Empty)"
                     data-url="@Url.Action("GetActiveLevels", "Level")">
                    <button class="form-select w-100 text-start d-flex justify-content-between align-items-center"
                        type="button"
                        id="dropdownSearchButton"
                        data-bs-toggle="dropdown"
                        aria-expanded="false">
                    <span class="text-secondary selected-level">
                        Select a Level
                    </span>
                        <i class="bx bx-chevron-down ms-2 text-secondary"></i>
                    </button>
                    <ul class="dropdown-menu py-2 px-1"
                        aria-labelledby="dropdownSearchButton">
                        <div class="px-2">
                            <input type="text"
                                   class="form-control form-control-sm mb-2 dropdown-search-input"
                                   id="dropdownSearchInput"
                                   placeholder="Search Level.."
                                   autocomplete="off" />
                        </div>
                        <li><span class="dropdown-item text-muted small"><i class="bx bx-loader bx-spin"></i> Loading...</span></li>
                    </ul>
                </div>
                <span asp-validation-for="LevelId" class="text-danger"></span>
            </div>
        </div>
        <div class="row g-3">
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="AgeGroup">Age Group</label>
                <select asp-for="AgeGroup" class="form-select">
                    <option value="All Ages">All Ages</option>
                    <option value="Kids">Kids</option>
                    <option value="Teens">Teens</option>
                    <option value="Adults">Adults</option>
                </select>
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="Status">Status</label>
                <select asp-for="Status" class="form-select">
                    <option value="Active">Active</option>
                    <option value="Inactive">Inactive</option>
                    <option value="Draft">Draft</option>
                </select>
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="DurationWeeks">Duration (Weeks)<span class="text-danger">*</span></label>
                <input asp-for="DurationWeeks" type="number" class="form-control" required min="1" id="durationWeeks" onchange="calculateTotalHours()" />
                <span asp-validation-for="DurationWeeks" class="text-danger"></span>
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="HoursPerWeek">Hours Per Week<span class="text-danger">*</span></label>
                <input asp-for="HoursPerWeek" type="number" class="form-control" required min="1" id="hoursPerWeek" onchange="calculateTotalHours()" />
                <span asp-validation-for="HoursPerWeek" class="text-danger"></span>
            </div>
        </div>
        <div class="row g-3">
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="TotalHours">Total Hours<span class="text-danger">*</span></label>
                <input asp-for="TotalHours" type="number" class="form-control" required min="1" readonly id="totalHours"/>
                <span asp-validation-for="TotalHours" class="text-danger"></span>
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="MinStudents">Min Students</label>
                <input asp-for="MinStudents" type="number" class="form-control" min="1" value="5" />
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="MaxStudents">Max Students</label>
                <input asp-for="MaxStudents" type="number" class="form-control" min="1" value="20" />
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="BaseFee">Base Fee<span class="text-danger">*</span></label>
                <input asp-for="BaseFee" type="number" class="form-control" required step="0.01" min="0.01" />
                <span asp-validation-for="BaseFee" class="text-danger"></span>
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="MaterialsFee">Materials Fee</label>
                <input asp-for="MaterialsFee" type="number" class="form-control" step="0.01" min="0" value="0.00" />
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="Description">Description</label>
                <textarea asp-for="Description" class="form-control" rows="2" placeholder="Enter course description.."></textarea>
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="Prerequisites">Prerequisites</label>
                <textarea asp-for="Prerequisites" class="form-control" rows="2" placeholder="Enter prerequisites.."></textarea>
            </div>
            <div class="col-3 mb-2">
                <label class="form-label" asp-for="MaterialsIncluded">Materials Included</label>
                <textarea asp-for="MaterialsIncluded" class="form-control" rows="2" placeholder="Enter materials included.."></textarea>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="bx bx-x-circle me-1"></i>Close</button>
        <button type="submit" class="btn btn-primary"><i class="bx bx-save me-1"></i>Save</button>
    </div>
</form>

<script>
function calculateTotalHours() {
    var durationWeeks = document.getElementById('durationWeeks').value;
    var hoursPerWeek = document.getElementById('hoursPerWeek').value;
    var totalHours = document.getElementById('totalHours');
    
    if (durationWeeks && hoursPerWeek) {
        totalHours.value = durationWeeks * hoursPerWeek;
    } else {
        totalHours.value = '';
    }
}

$(function () {
    $('.searchable-select').each(function () {
        const $container = $(this);
        const $button = $container.find('button.form-select');
        const $dropdownMenu = $container.find('.dropdown-menu');
        const $searchInput = $container.find('.dropdown-search-input');
        const hiddenName = $container.data('name');
        let selectedValue = $container.data('selected-value') || '';
        const ajaxUrl = $container.data('url')?.trim() || null;

        let $hiddenInput = $container.find(`input[type="hidden"][name="${hiddenName}"]`);
        if (!$hiddenInput.length) {
            $hiddenInput = $('<input type="hidden">').attr('name', hiddenName);
            $container.append($hiddenInput);
        }
        $hiddenInput.val(selectedValue);

        function renderOptions(items) {
            $dropdownMenu.find('li').not(':first-child').remove();

            if (!Array.isArray(items)) {
                return $dropdownMenu.append('<li><a href="#" class="dropdown-item text-danger small">Invalid data format</a></li>');
            }

            if (items.length === 0) {
                return $dropdownMenu.append('<li><a href="#" class="dropdown-item text-muted small">No results found</a></li>');
            }

            items.forEach(item => {
                const isActive = (selectedValue.toString() === item.id.toString()) ? ' active' : '';
                const $li = $(`
                    <li>
                        <a href="#" class="dropdown-item${isActive}" data-value="${item.id}" title="${item.text}">
                            ${item.text} (${item.code})
                        </a>
                    </li>
                `);
                $dropdownMenu.append($li);
                if (isActive) {
                    $button.find('.selected-level').text(item.text).removeClass('text-secondary');
                }
            });
        }

        function fetchOptions(query = '') {
            if (!ajaxUrl) return;

            $dropdownMenu.find('li').not(':first-child').remove();
            $dropdownMenu.append('<li><span class="dropdown-item text-muted small"><i class="bx bx-loader bx-spin"></i> Loading...</span></li>');

            $.ajax({
                url: ajaxUrl,
                method: 'GET',
                data: { q: query },
                dataType: 'json'
            })
                .done(function (data) {
                    renderOptions(data);
                })
                .fail(function () {
                    $dropdownMenu.find('li').not(':first-child').remove();
                    $dropdownMenu.append('<li><a href="#" class="dropdown-item text-danger small">Error loading data. Check console.</a></li>');
                });
        }

        $searchInput.on('input', function () {
            const query = $(this).val().toLowerCase();
            if (ajaxUrl) {
                fetchOptions(query);
            } else {
                $dropdownMenu.find('li').not(':first-child').each(function () {
                    const text = $(this).find('.dropdown-item').text().toLowerCase();
                    $(this).toggle(text.includes(query));
                });
            }
        });

        $container.on('show.bs.dropdown', function () {
            $searchInput.val('').focus();
            if (ajaxUrl) {
                fetchOptions('');
            } else {
                $dropdownMenu.find('li').show();
            }
        });

        $dropdownMenu.on('click', '.dropdown-item', function (e) {
            e.preventDefault();
            const $item = $(this);
            const newValue = $item.data('value');
            const newText = $item.text();

            selectedValue = newValue;
            $hiddenInput.val(newValue);
            $container.data('selected-value', newValue);
            $button.find('.selected-level').text(newText).removeClass('text-secondary');

            $dropdownMenu.find('.dropdown-item').removeClass('active');
            $item.addClass('active');

            const bsDropdown = bootstrap.Dropdown.getInstance($button[0]);
            if (bsDropdown) {
                bsDropdown.hide();
            }

            $container.trigger('itemSelected', { id: newValue, text: newText });
        });

        if (ajaxUrl) {
            fetchOptions('');
        }
    });
});
</script>
