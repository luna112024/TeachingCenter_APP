@model CreateAttendanceDTO

<div class="modal-header">
    <h4 class="modal-title">Add Attendance</h4>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>

<form asp-action="AddAttendance" asp-controller="Attendance" method="post" id="addAttendanceForm">
    <div class="modal-body" style="max-height: 70vh; overflow-y: auto;">
        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="EnrollmentId" class="form-label">Student Enrollment <span class="text-danger">*</span></label>
                <div class="searchable-select dropdown w-100"
                     data-name="EnrollmentId"
                     data-selected-value="@(Model?.EnrollmentId ?? Guid.Empty)"
                     data-url="@Url.Action("GetEnrollments", "Enrollment")">
                    <button class="form-select w-100 text-start d-flex justify-content-between align-items-center"
                        type="button"
                        id="dropdownSearchButton"
                        data-bs-toggle="dropdown"
                        aria-expanded="false">
                    <span class="text-secondary selected-enrollment">
                        Select Student Enrollment
                    </span>
                        <i class="bx bx-chevron-down ms-2 text-secondary"></i>
                    </button>
                    <ul class="dropdown-menu py-2 px-1"
                        aria-labelledby="dropdownSearchButton">
                        <div class="px-2">
                            <input type="text"
                                   class="form-control form-control-sm mb-2 dropdown-search-input"
                                   id="dropdownSearchInput"
                                   placeholder="Search Student..."
                                   autocomplete="off" />
                        </div>
                        <li><span class="dropdown-item text-muted small"><i class="bx bx-loader bx-spin"></i> Loading...</span></li>
                    </ul>
                </div>
                <span asp-validation-for="EnrollmentId" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label asp-for="ClassDate" class="form-label">Class Date <span class="text-danger">*</span></label>
                <input asp-for="ClassDate" type="date" class="form-control" required />
                <span asp-validation-for="ClassDate" class="text-danger"></span>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="ScheduledStartTime" class="form-label">Scheduled Start Time <span class="text-danger">*</span></label>
                <input asp-for="ScheduledStartTime" type="time" class="form-control" required />
                <span asp-validation-for="ScheduledStartTime" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label asp-for="ScheduledEndTime" class="form-label">Scheduled End Time <span class="text-danger">*</span></label>
                <input asp-for="ScheduledEndTime" type="time" class="form-control" required />
                <span asp-validation-for="ScheduledEndTime" class="text-danger"></span>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="Status" class="form-label">Status <span class="text-danger">*</span></label>
                <select asp-for="Status" class="form-select" required>
                    <option value="">Select Status</option>
                    <option value="Present">Present</option>
                    <option value="Absent">Absent</option>
                    <option value="Late">Late</option>
                    <option value="Excused">Excused</option>
                    <option value="Sick">Sick</option>
                    <option value="Emergency">Emergency</option>
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label asp-for="ParticipationScore" class="form-label">Participation Score</label>
                <select asp-for="ParticipationScore" class="form-select">
                    <option value="1">1 - Poor</option>
                    <option value="2">2 - Below Average</option>
                    <option value="3">3 - Average</option>
                    <option value="4">4 - Good</option>
                    <option value="5" selected>5 - Excellent</option>
                </select>
                <span asp-validation-for="ParticipationScore" class="text-danger"></span>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="CheckInTime" class="form-label">Check In Time</label>
                <input asp-for="CheckInTime" type="time" class="form-control" />
                <span asp-validation-for="CheckInTime" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label asp-for="CheckOutTime" class="form-label">Check Out Time</label>
                <input asp-for="CheckOutTime" type="time" class="form-control" />
                <span asp-validation-for="CheckOutTime" class="text-danger"></span>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="MinutesLate" class="form-label">Minutes Late</label>
                <input asp-for="MinutesLate" type="number" min="0" class="form-control" />
                <span asp-validation-for="MinutesLate" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <div class="form-check mt-4">
                    <input asp-for="MakeupRequired" class="form-check-input" type="checkbox" />
                    <label asp-for="MakeupRequired" class="form-check-label">
                        Makeup Required
                    </label>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="MakeupScheduledDate" class="form-label">Makeup Scheduled Date</label>
                <input asp-for="MakeupScheduledDate" type="date" class="form-control" />
                <span asp-validation-for="MakeupScheduledDate" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <div class="form-check mt-4">
                    <input asp-for="HomeworkSubmitted" class="form-check-input" type="checkbox" checked />
                    <label asp-for="HomeworkSubmitted" class="form-check-label">
                        Homework Submitted
                    </label>
                </div>
            </div>
        </div>

        <div class="mb-3">
            <label asp-for="Notes" class="form-label">Notes</label>
            <textarea asp-for="Notes" class="form-control" rows="3" placeholder="Additional notes..."></textarea>
            <span asp-validation-for="Notes" class="text-danger"></span>
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary">Save Attendance</button>
    </div>
</form>

<script>
function calculateTotalHours() {
    var durationWeeks = document.getElementById('durationWeeks').value;
    var hoursPerWeek = document.getElementById('hoursPerWeek').value;
    var totalHours = document.getElementById('totalHours');
    
    if (durationWeeks && hoursPerWeek) {
        totalHours.value = durationWeeks * hoursPerWeek;
    } else {
        totalHours.value = '';
    }
}

$(function () {
    // Set default date to today
    $('#ClassDate').val(new Date().toISOString().split('T')[0]);
    
    // Auto-calculate minutes late when check-in time changes
    function calculateMinutesLate() {
        var scheduledStartTime = $('#ScheduledStartTime').val();
        var checkInTime = $('#CheckInTime').val();
        
        if (scheduledStartTime && checkInTime) {
            // Convert time strings to minutes for calculation
            var scheduledMinutes = timeToMinutes(scheduledStartTime);
            var checkInMinutes = timeToMinutes(checkInTime);
            
            // Calculate difference
            var minutesLate = checkInMinutes - scheduledMinutes;
            
            // Only set if student is actually late (positive value)
            if (minutesLate > 0) {
                $('#MinutesLate').val(minutesLate);
                // Auto-set status to Late if not already set
                if ($('#Status').val() === '') {
                    $('#Status').val('Late');
                }
            } else {
                $('#MinutesLate').val(0);
            }
        }
    }
    
    // Helper function to convert time string to minutes
    function timeToMinutes(timeString) {
        var parts = timeString.split(':');
        return parseInt(parts[0]) * 60 + parseInt(parts[1]);
    }
    
    // Attach event listeners for auto-calculation
    $('#CheckInTime, #ScheduledStartTime').on('change', calculateMinutesLate);
    
    // Handle form submission
    $('#addAttendanceForm').on('submit', function(e) {
        e.preventDefault();
        
        $.ajax({
            url: $(this).attr('action'),
            type: 'POST',
            data: $(this).serialize(),
            success: function(response) {
                if (response.flag) {
                    $('#modal-container').modal('hide');
                    showNotification('success', response.message);
                    loadAttendanceList();
                } else {
                    showNotification('error', response.message);
                }
            },
            error: function() {
                showNotification('error', 'An error occurred while saving attendance.');
            }
        });
    });

    $('.searchable-select').each(function () {
        const $container = $(this);
        const $button = $container.find('button.form-select');
        const $dropdownMenu = $container.find('.dropdown-menu');
        const $searchInput = $container.find('.dropdown-search-input');
        const hiddenName = $container.data('name');
        let selectedValue = $container.data('selected-value') || '';
        const ajaxUrl = $container.data('url')?.trim() || null;

        let $hiddenInput = $container.find(`input[type="hidden"][name="${hiddenName}"]`);
        if (!$hiddenInput.length) {
            $hiddenInput = $('<input type="hidden">').attr('name', hiddenName);
            $container.append($hiddenInput);
        }
        $hiddenInput.val(selectedValue);

        function renderOptions(items) {
            $dropdownMenu.find('li').not(':first-child').remove();

            if (!Array.isArray(items)) {
                return $dropdownMenu.append('<li><a href="#" class="dropdown-item text-danger small">Invalid data format</a></li>');
            }

            if (items.length === 0) {
                return $dropdownMenu.append('<li><a href="#" class="dropdown-item text-muted small">No enrollments found</a></li>');
            }

            items.forEach(item => {
                const isActive = (selectedValue.toString() === item.id.toString()) ? ' active' : '';
                const $li = $(`
                    <li>
                        <a href="#" class="dropdown-item${isActive}" data-value="${item.id}" title="${item.text}">
                            ${item.text} (${item.code})
                        </a>
                    </li>
                `);
                $dropdownMenu.append($li);
                if (isActive) {
                    $button.find('.selected-enrollment').text(item.text).removeClass('text-secondary');
                }
            });
        }

        function fetchOptions(query = '') {
            if (!ajaxUrl) return;

            $dropdownMenu.find('li').not(':first-child').remove();
            $dropdownMenu.append('<li><span class="dropdown-item text-muted small"><i class="bx bx-loader bx-spin"></i> Loading...</span></li>');

            $.ajax({
                url: ajaxUrl,
                method: 'GET',
                data: { q: query },
                dataType: 'json'
            })
                .done(function (data) {
                    renderOptions(data);
                })
                .fail(function () {
                    $dropdownMenu.find('li').not(':first-child').remove();
                    $dropdownMenu.append('<li><a href="#" class="dropdown-item text-danger small">Error loading enrollments. Check console.</a></li>');
                });
        }

        $searchInput.on('input', function () {
            const query = $(this).val().toLowerCase();
            if (ajaxUrl) {
                fetchOptions(query);
            } else {
                $dropdownMenu.find('li').not(':first-child').each(function () {
                    const text = $(this).find('.dropdown-item').text().toLowerCase();
                    $(this).toggle(text.includes(query));
                });
            }
        });

        $container.on('show.bs.dropdown', function () {
            $searchInput.val('').focus();
            if (ajaxUrl) {
                fetchOptions('');
            } else {
                $dropdownMenu.find('li').show();
            }
        });

        $dropdownMenu.on('click', '.dropdown-item', function (e) {
            e.preventDefault();
            const $item = $(this);
            const newValue = $item.data('value');
            const newText = $item.text();

            selectedValue = newValue;
            $hiddenInput.val(newValue);
            $container.data('selected-value', newValue);
            $button.find('.selected-enrollment').text(newText).removeClass('text-secondary');

            $dropdownMenu.find('.dropdown-item').removeClass('active');
            $item.addClass('active');

            const bsDropdown = bootstrap.Dropdown.getInstance($button[0]);
            if (bsDropdown) {
                bsDropdown.hide();
            }

            $container.trigger('itemSelected', { id: newValue, text: newText });
        });

        if (ajaxUrl) {
            fetchOptions('');
        }
    });
});
</script>
