@model BulkAttendanceDTO

<div class="modal-header">
    <h4 class="modal-title">Bulk Attendance</h4>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>

<form asp-action="RecordBulkAttendance" asp-controller="Attendance" method="post" id="bulkAttendanceForm">
    <div class="modal-body" style="max-height: 70vh; overflow-y: auto;">
        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="SectionId" class="form-label">Section <span class="text-danger">*</span></label>
                <div class="searchable-select dropdown w-100"
                     data-name="SectionId"
                     data-selected-value="@(Model?.SectionId ?? Guid.Empty)"
                     data-url="@Url.Action("GetClassSections", "ClassSection")">
                    <button class="form-select w-100 text-start d-flex justify-content-between align-items-center"
                        type="button"
                        id="dropdownSearchButton"
                        data-bs-toggle="dropdown"
                        aria-expanded="false">
                    <span class="text-secondary selected-section">
                        Select Section
                    </span>
                        <i class="bx bx-chevron-down ms-2 text-secondary"></i>
                    </button>
                    <ul class="dropdown-menu py-2 px-1"
                        aria-labelledby="dropdownSearchButton">
                        <div class="px-2">
                            <input type="text"
                                   class="form-control form-control-sm mb-2 dropdown-search-input"
                                   id="dropdownSearchInput"
                                   placeholder="Search Section..."
                                   autocomplete="off" />
                        </div>
                        <li><span class="dropdown-item text-muted small"><i class="bx bx-loader bx-spin"></i> Loading...</span></li>
                    </ul>
                </div>
                <span asp-validation-for="SectionId" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label asp-for="ClassDate" class="form-label">Class Date <span class="text-danger">*</span></label>
                <input asp-for="ClassDate" type="date" class="form-control" required />
                <span asp-validation-for="ClassDate" class="text-danger"></span>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                <label asp-for="ScheduledStartTime" class="form-label">Scheduled Start Time <span class="text-danger">*</span></label>
                <input asp-for="ScheduledStartTime" type="time" class="form-control" required />
                <span asp-validation-for="ScheduledStartTime" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <label asp-for="ScheduledEndTime" class="form-label">Scheduled End Time <span class="text-danger">*</span></label>
                <input asp-for="ScheduledEndTime" type="time" class="form-control" required />
                <span asp-validation-for="ScheduledEndTime" class="text-danger"></span>
            </div>
        </div>

        <div class="mb-3">
            <label class="form-label">Attendance Records</label>
            <div id="attendanceRecordsContainer">
                <div class="text-center py-4">
                    <p class="text-muted">Select a section to load enrolled students</p>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary">Record Bulk Attendance</button>
    </div>
</form>

<script>
    $(function () {
        // Set default date to today
        $('#ClassDate').val(new Date().toISOString().split('T')[0]);
        
        // Handle form submission
        $('#bulkAttendanceForm').on('submit', function(e) {
            e.preventDefault();
            
            // Collect attendance records
            var attendanceRecords = [];
            $('.attendance-record').each(function() {
                var enrollmentId = $(this).find('.enrollment-id').val();
                var status = $(this).find('.status-select').val();
                var checkInTime = $(this).find('.checkin-time').val();
                var checkOutTime = $(this).find('.checkout-time').val();
                var minutesLate = $(this).find('.minutes-late').val() || 0;
                var makeupRequired = $(this).find('.makeup-required').is(':checked');
                var homeworkSubmitted = $(this).find('.homework-submitted').is(':checked');
                var participationScore = $(this).find('.participation-score').val() || 5;
                var notes = $(this).find('.notes').val();
                
                attendanceRecords.push({
                    EnrollmentId: enrollmentId,
                    Status: status,
                    CheckInTime: checkInTime,
                    CheckOutTime: checkOutTime,
                    MinutesLate: parseInt(minutesLate),
                    MakeupRequired: makeupRequired,
                    HomeworkSubmitted: homeworkSubmitted,
                    ParticipationScore: parseInt(participationScore),
                    Notes: notes
                });
            });
            
            var formData = {
                SectionId: $('input[name="SectionId"]').val(),
                ClassDate: $('#ClassDate').val(),
                ScheduledStartTime: $('#ScheduledStartTime').val(),
                ScheduledEndTime: $('#ScheduledEndTime').val(),
                AttendanceRecords: attendanceRecords
            };
            
            $.ajax({
                url: $(this).attr('action'),
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function(response) {
                    if (response.flag) {
                        $('#modal-container').modal('hide');
                        showNotification('success', response.message);
                        loadAttendanceList();
                    } else {
                        showNotification('error', response.message);
                    }
                },
                error: function() {
                    showNotification('error', 'An error occurred while recording bulk attendance.');
                }
            });
        });

        $('.searchable-select').each(function () {
            const $container = $(this);
            const $button = $container.find('button.form-select');
            const $dropdownMenu = $container.find('.dropdown-menu');
            const $searchInput = $container.find('.dropdown-search-input');
            const hiddenName = $container.data('name');
            let selectedValue = $container.data('selected-value') || '';
            const ajaxUrl = $container.data('url')?.trim() || null;

            let $hiddenInput = $container.find(`input[type="hidden"][name="${hiddenName}"]`);
            if (!$hiddenInput.length) {
                $hiddenInput = $('<input type="hidden">').attr('name', hiddenName);
                $container.append($hiddenInput);
            }
            $hiddenInput.val(selectedValue);

            function renderOptions(items) {
                $dropdownMenu.find('li').not(':first-child').remove();

                if (!Array.isArray(items)) {
                    return $dropdownMenu.append('<li><a href="#" class="dropdown-item text-danger small">Invalid data format</a></li>');
                }

                if (items.length === 0) {
                    return $dropdownMenu.append('<li><a href="#" class="dropdown-item text-muted small">No sections found</a></li>');
                }

                items.forEach(item => {
                    const isActive = (selectedValue.toString() === item.id.toString()) ? ' active' : '';
                    const $li = $(`
                        <li>
                            <a href="#" class="dropdown-item${isActive}" data-value="${item.id}" title="${item.text}">
                                ${item.text} (${item.code})
                            </a>
                        </li>
                    `);
                    $dropdownMenu.append($li);
                    if (isActive) {
                        $button.find('.selected-section').text(item.text).removeClass('text-secondary');
                    }
                });
            }

            function fetchOptions(query = '') {
                if (!ajaxUrl) return;

                $dropdownMenu.find('li').not(':first-child').remove();
                $dropdownMenu.append('<li><span class="dropdown-item text-muted small"><i class="bx bx-loader bx-spin"></i> Loading...</span></li>');

                $.ajax({
                    url: ajaxUrl,
                    method: 'GET',
                    data: { q: query },
                    dataType: 'json'
                })
                    .done(function (data) {
                        renderOptions(data);
                    })
                    .fail(function () {
                        $dropdownMenu.find('li').not(':first-child').remove();
                        $dropdownMenu.append('<li><a href="#" class="dropdown-item text-danger small">Error loading sections. Check console.</a></li>');
                    });
            }

            $searchInput.on('input', function () {
                const query = $(this).val().toLowerCase();
                if (ajaxUrl) {
                    fetchOptions(query);
                } else {
                    $dropdownMenu.find('li').not(':first-child').each(function () {
                        const text = $(this).find('.dropdown-item').text().toLowerCase();
                        $(this).toggle(text.includes(query));
                    });
                }
            });

            $container.on('show.bs.dropdown', function () {
                $searchInput.val('').focus();
                if (ajaxUrl) {
                    fetchOptions('');
                } else {
                    $dropdownMenu.find('li').show();
                }
            });

            $dropdownMenu.on('click', '.dropdown-item', function (e) {
                e.preventDefault();
                const $item = $(this);
                const newValue = $item.data('value');
                const newText = $item.text();

                selectedValue = newValue;
                $hiddenInput.val(newValue);
                $container.data('selected-value', newValue);
                $button.find('.selected-section').text(newText).removeClass('text-secondary');

                $dropdownMenu.find('.dropdown-item').removeClass('active');
                $item.addClass('active');

                const bsDropdown = bootstrap.Dropdown.getInstance($button[0]);
                if (bsDropdown) {
                    bsDropdown.hide();
                }

                $container.trigger('itemSelected', { id: newValue, text: newText });
                
                // Load enrolled students when section is selected
                if (newValue) {
                    loadEnrolledStudents(newValue);
                } else {
                    $('#attendanceRecordsContainer').html('<div class="text-center py-4"><p class="text-muted">Select a section to load enrolled students</p></div>');
                }
            });

            if (ajaxUrl) {
                fetchOptions('');
            }
        });
    });
    
    function loadEnrolledStudents(sectionId) {
        $.ajax({
            url: '@Url.Action("GetEnrollmentsBySection", "Enrollment")',
            type: 'GET',
            data: { sectionId: sectionId },
            success: function(data) {
                var container = $('#attendanceRecordsContainer');
                container.empty();
                
                if (data && data.length > 0) {
                    $.each(data, function(index, enrollment) {
                        var recordHtml = `
                            <div class="attendance-record border rounded p-3 mb-3">
                                <div class="row">
                                    <div class="col-md-4">
                                        <h6 class="mb-1">${enrollment.studentName}</h6>
                                        <small class="text-muted">${enrollment.studentCode}</small>
                                        <input type="hidden" class="enrollment-id" value="${enrollment.enrollmentId}" />
                                    </div>
                                    <div class="col-md-8">
                                        <div class="row">
                                            <div class="col-md-6 mb-2">
                                                <select class="form-select status-select" required>
                                                    <option value="">Select Status</option>
                                                    <option value="Present">Present</option>
                                                    <option value="Absent">Absent</option>
                                                    <option value="Late">Late</option>
                                                    <option value="Excused">Excused</option>
                                                    <option value="Sick">Sick</option>
                                                    <option value="Emergency">Emergency</option>
                                                </select>
                                            </div>
                                            <div class="col-md-6 mb-2">
                                                <input type="number" class="form-control minutes-late" placeholder="Minutes Late" min="0" />
                                            </div>
                                            <div class="col-md-6 mb-2">
                                                <input type="time" class="form-control checkin-time" placeholder="Check In" />
                                            </div>
                                            <div class="col-md-6 mb-2">
                                                <input type="time" class="form-control checkout-time" placeholder="Check Out" />
                                            </div>
                                            <div class="col-md-12 mb-2">
                                                <textarea class="form-control notes" rows="2" placeholder="Notes"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `;
                        container.append(recordHtml);
                    });
                } else {
                    container.html('<div class="text-center py-4"><p class="text-muted">No enrolled students found for this section</p></div>');
                }
            },
            error: function() {
                var container = $('#attendanceRecordsContainer');
                container.html('<div class="text-center py-4"><p class="text-danger">Error loading enrolled students</p></div>');
            }
        });
    }
</script>
