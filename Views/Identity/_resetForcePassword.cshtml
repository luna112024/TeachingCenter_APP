@model AdminResetPasswordDTO

<style>
    .modal-body {
        max-height: 70vh;
        overflow-y: auto;
    }

    .password-field {
        margin-bottom: 1.2rem;
    }

    .input-wrapper {
        position: relative;
        margin-bottom: 0.25rem;
    }

        .input-wrapper .form-control {
            padding-left: 2.75rem;
            padding-right: 3rem;
            height: 2.5rem;
            font-size: 1rem;
            line-height: 1.5;
        }

        .input-wrapper .input-icon {
            position: absolute;
            top: 50%;
            left: 0.75rem;
            transform: translateY(-50%);
            font-size: 1.25rem;
            color: #6c757d;
            pointer-events: none;
            user-select: none;
            line-height: 1;
        }

        .input-wrapper .password-toggle {
            position: absolute;
            top: 50%;
            right: 0.75rem;
            transform: translateY(-50%);
            background: transparent;
            border: none;
            color: #6c757d;
            font-size: 1.25rem;
            padding: 0;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .input-wrapper .password-toggle:hover {
                color: #0d6efd;
            }
    /* Alert animations */
    #securityNoticePanel {
        transition: all 0.3s ease;
        opacity: 1;
        transform: translateY(0);
    }

        #securityNoticePanel[style*="display: none"] {
            opacity: 0;
            transform: translateY(-10px);
            transition: all 0.3s ease;
        }

    #securityNoticeToggle {
        border-radius: 20px;
        font-size: 13px;
        padding: 6px 15px;
        transition: all 0.2s ease;
        border: 1px solid #ffc107;
        color: #ffc107;
        background-color: transparent;
    }

        #securityNoticeToggle:hover, #securityNoticeToggle:focus {
            background-color: #ffc107;
            color: white;
            outline: none;
        }
    /* Custom warning outline button (like custom-outline-info in _manageRole.cshtml) */
    .custom-outline-warning {
        font-size: 0.85rem !important;
        color: #ffc107 !important;
        background-color: transparent;
        border: 1px solid #ffc107;
        transition: color 0.15s, background-color 0.15s, border-color 0.15s;
        border-radius: 20px;
        padding: 4px 14px;
        font-weight: 500;
    }

    .custom-outline-warning:hover,
    .custom-outline-warning:focus,
    .custom-outline-warning.active,
    .custom-outline-warning[aria-expanded="true"] {
        color: #fff !important;
        background-color: #ffc107 !important;
        border-color: #ffc107 !important;
        outline: none;
        box-shadow: 0 2px 8px rgba(255,193,7,0.12);
    }

    .custom-outline-warning:active {
        background-color: #e0a800 !important;
        border-color: #e0a800 !important;
        color: #fff !important;
    }
    /* Clean, modern security notice alert */
    #securityNoticePanel {
        background: #fffbe6;
        border: 1px solid #ffe082;
        color: #856404;
        border-radius: 10px;
        font-size: 0.97rem;
        padding: 1rem 1.25rem;
        margin-bottom: 0.5rem;
        box-shadow: 0 2px 8px rgba(255,193,7,0.06);
        display: none;
        transition: all 0.3s;
    }

        #securityNoticePanel .security-title {
            font-weight: 700;
            color: #b28704;
            font-size: 1rem;
            margin-bottom: 0.25rem;
            display: flex;
            align-items: center;
        }

            #securityNoticePanel .security-title i {
                font-size: 1.2rem;
                margin-right: 0.5rem;
                color: #ffc107;
            }

        #securityNoticePanel .security-text {
            font-size: 0.97rem;
            color: #856404;
            margin-left: 1.7rem;
            margin-top: 0.1rem;
        }
</style>
<form asp-action="ResetForcePassword" asp-controller="Identity" method="post" autocomplete="off" data-ajax="true"
      data-ajax-method="POST" data-ajax-complete="Success">
    <input type="hidden" asp-for="UserId" />
    @Html.AntiForgeryToken()
    @*  <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">
            <i class="bx bx-refresh me-2"></i>Reset User Password
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div> *@
    <div class="modal-header py-2 lh-sm d-flex align-items-center justify-content-between">
        <div class="d-flex align-items-center">
            <i class="bx bx-refresh me-2 fs-4" style="line-height: 1;"></i>
            <div>
                <h5 class="modal-title mb-0" id="staticBackdropLabel">Reset User Password</h5>
                <small class="text-muted fw-semibold">Admin Password Reset</small>
            </div>
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>


    <div class="modal-body">
        @*  <div class="alert alert-info mb-3 lh-sm">
            <i class="bx bx-info-circle me-2"></i>
            <strong>Admin Password Reset</strong><br/>
            You are about to reset the password for: <strong>@ViewBag.Username</strong> 
            (@ViewBag.Email)
        </div> *@
        <div class="mb-3">
            <label class="form-label">You are about to reset the password for:</label>
            <div class="alert alert-info rounded px-3 py-2  text-start lh-sm" style="width: 100%; font-size: 0.95rem;">
                <div class="fw-bold">@ViewBag.Username</div>
                <div class="small fw-semibold">@ViewBag.Email</div>
            </div>
        </div>
        <div class="mb-3">
            <button type="button" class="btn custom-outline-warning btn-sm" onclick="toggleSecurityNotice()" id="securityNoticeToggle">
                <i class="bx bx-shield me-1"></i>
                <span id="securityNoticeToggleText">Security Notice</span>
                <i class="bx bx-chevron-down ms-1" id="securityNoticeChevron"></i>
            </button>
        </div>
        <div class="alert alert-warning lh-sm" id="securityNoticePanel" style="display: none;">
            <div class="security-title"><i class="bx bx-shield"></i>Security Notice:</div>
            <ul class="security-text" style="list-style-type: disc; padding-left: 1.5em; margin-bottom: 0;">
                <li>This action will immediately invalidate all existing sessions for this user.</li>
                <li>The user will need to login with the new password.</li>
            </ul>
        </div>
        <div class="mb-3">
            <div class="password-field">
                <label class="form-label" asp-for="NewPassword"></label>
                <div class="input-wrapper position-relative">
                    <input asp-for="NewPassword" id="NewPassword" type="password" class="form-control" required placeholder="Enter new password" autocomplete="new-password" />
                    <i class="bx bx-lock-alt input-icon"></i>
                    <button class="password-toggle" type="button" onclick="togglePassword('NewPassword')">
                        <i class="bx bx-show" id="NewPassword-icon"></i>
                    </button>
                </div>
                <span asp-validation-for="NewPassword" class="text-danger small"></span>
            </div>
            <div class="password-field">
                <label class="form-label" asp-for="ConfirmPassword"></label>
                <div class="input-wrapper position-relative">
                    <input asp-for="ConfirmPassword" id="ConfirmPassword" type="password" class="form-control" required placeholder="Confirm new password" autocomplete="new-password" />
                    <i class="bx bx-lock-alt input-icon"></i>
                    <button class="password-toggle" type="button" onclick="togglePassword('ConfirmPassword')">
                        <i class="bx bx-show" id="ConfirmPassword-icon"></i>
                    </button>
                </div>
                <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
            </div>

            <div class="mb-3">
                <label class="form-label" asp-for="Reason">
                    <i class="bx bx-note me-1"></i>Reason (Optional)
                </label>
                <textarea asp-for="Reason" class="form-control" rows="3"
                          placeholder="Enter reason for password reset (for audit purposes)"></textarea>
                <span asp-validation-for="Reason" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
            <i class="bx bx-x-circle me-1"></i>Cancel
        </button>
        <button type="submit" class="btn btn-primary">
            <i class="bx bx-refresh me-1"></i>Reset Password
        </button>
    </div>
</form>

<script>
    function togglePassword(fieldId) {
        const passwordField = document.getElementById(fieldId);
        const icon = document.getElementById(fieldId + '-icon');

        if (passwordField.type === 'password') {
            passwordField.type = 'text';
            icon.className = 'bx bx-hide';
        } else {
            passwordField.type = 'password';
            icon.className = 'bx bx-show';
        }
    }

    // Real-time password match validation
    document.addEventListener('DOMContentLoaded', function() {
        const newPassword = document.getElementById('NewPassword');
        const confirmPassword = document.getElementById('ConfirmPassword');

        function validatePasswordMatch() {
            if (confirmPassword.value && newPassword.value !== confirmPassword.value) {
                confirmPassword.setCustomValidity('Passwords do not match');
            } else {
                confirmPassword.setCustomValidity('');
            }
        }

        newPassword?.addEventListener('input', validatePasswordMatch);
        confirmPassword?.addEventListener('input', validatePasswordMatch);
    });

    function toggleSecurityNotice() {
        const panel = document.getElementById('securityNoticePanel');
        const toggleText = document.getElementById('securityNoticeToggleText');
        const chevron = document.getElementById('securityNoticeChevron');

        if (panel.style.display === 'none') {
            panel.style.display = 'block';
            toggleText.textContent = 'Hide Security Notice';
            chevron.className = 'bx bx-chevron-up ms-1';
            panel.style.opacity = '0';
            panel.style.transform = 'translateY(-10px)';
            setTimeout(() => {
                panel.style.transition = 'all 0.3s ease';
                panel.style.opacity = '1';
                panel.style.transform = 'translateY(0)';
            }, 10);
        } else {
            panel.style.transition = 'all 0.3s ease';
            panel.style.opacity = '0';
            panel.style.transform = 'translateY(-10px)';
            setTimeout(() => {
                panel.style.display = 'none';
                toggleText.textContent = 'Show Security Notice';
                chevron.className = 'bx bx-chevron-down ms-1';
            }, 300);
        }
    }
</script> 