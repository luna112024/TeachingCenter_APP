@using hongWenAPP.Models.AssessmentModel.DTOs
@model PageList<GetAssessmentDTO>

<style>
    .bg-label-success {
        background-color: #e8fadf !important;
        color: #71dd37 !important;
        font-size: 11px;
        font-weight: 600;
    }

    .bg-label-secondary {
        background-color: #e4e6e8 !important;
        color: #8592a3;
        font-size: 11px;
        font-weight: 600;
    }

    .bg-label-warning {
        background-color: #fff3cd !important;
        color: #856404;
        font-size: 11px;
        font-weight: 600;
    }

    .bg-label-primary {
        background-color: #e7f3ff !important;
        color: #696cff;
        font-size: 11px;
        font-weight: 600;
    }

    .bg-label-danger {
        background-color: #f8d7da !important;
        color: #721c24;
        font-size: 11px;
        font-weight: 600;
    }
</style>
<table class="table">
    <thead>
        <tr>
            <th class="mcol-50">N<sup>o</sup></th>
            <th>Assessment Name</th>
            <th>Type</th>
            <th>Section</th>
            <th>Course</th>
            <th>Max Score</th>
            <th>Weight %</th>
            <th>Assessment Date</th>
            <th>Due Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody class="table-border-bottom-0">
        @{
            var i = Model.Paging.StartRowNo;
        }
        @foreach (var m in Model)
        {
        <tr>
            <td>@i</td>
            <td>
                <div class="d-flex flex-column">
                    <h6 class="mb-0">@m.AssessmentName</h6>
                    @if (!string.IsNullOrEmpty(m.Description))
                    {
                        <small class="text-muted">@(m.Description.Length > 50 ? m.Description.Substring(0, 50) + "..." : m.Description)</small>
                    }
                </div>
            </td>
            <td>
                <span class="badge bg-label-primary">@m.AssessmentType</span>
            </td>
            <td>
                <div class="d-flex flex-column">
                    <span class="fw-semibold">@m.SectionName</span>
                    <small class="text-muted">@m.SectionCode</small>
                </div>
            </td>
            <td>@m.CourseName</td>
            <td>@m.MaxScore</td>
            <td>@m.WeightPercentage%</td>
            <td>@m.AssessmentDate.ToString("MMM dd, yyyy")</td>
            <td>
                @if (m.DueDate.HasValue)
                {
                    @m.DueDate.Value.ToString("MMM dd, yyyy")
                }
                else
                {
                    <span class="text-muted">-</span>
                }
            </td>
            <td class="text-end">
                <div class="dropdown">
                    <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                        <i class="bx bx-dots-vertical-rounded"></i>
                    </button>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" modal-popup="" modal-size="lg" asp-action="DetailsAssessment" asp-controller="Assessment" asp-route-id="@m.AssessmentId"><i class="bx bx-show me-1"></i> View</a>
                        <a class="dropdown-item" modal-popup="" modal-size="xl" asp-action="EditAssessment" asp-controller="Assessment" asp-route-id="@m.AssessmentId"><i class="bx bx-edit-alt me-1"></i> Edit</a>
                        <a class="dropdown-item" modal-popup="" modal-size="lg" asp-action="DuplicateAssessment" asp-controller="Assessment" asp-route-id="@m.AssessmentId"><i class="bx bx-copy me-1"></i> Duplicate</a>
                        <a class="dropdown-item text-danger" modal-popup="" asp-action="DeleteAssessment" asp-controller="Assessment" asp-route-id="@m.AssessmentId"><i class="bx bx-trash me-1"></i> Delete</a>
                    </div>
                </div>
            </td>
        </tr>
        i++;
        }

    </tbody>
</table>

@await Html.PartialAsync("_pageList", Model.Paging)
